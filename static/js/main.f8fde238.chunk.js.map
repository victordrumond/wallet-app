{"version":3,"sources":["AddListButton.js","RemoveListButton.js","globalDeclarations.js","Statement.js","PieChart.js","Statistics.js","ListContent.js","NewEntryOnList.js","RemoveEntryOnList.js","List.js","CurrentLists.js","App.js","reportWebVitals.js","index.js"],"names":["AddListButton","createNewList","lists","props","useState","listName","setListName","error","setError","errorLog","setErrorLog","id","Modal","size","centered","Header","closeButton","Title","Body","Form","Group","className","controlId","Control","type","placeholder","value","onChange","e","target","required","Footer","Button","onClick","indexOf","onHide","RemoveListButton","removeCurrentList","length","monthsObj","formatMoney","test","parseFloat","substring","toFixed","formatDate","date","dateArray","split","year","month","day","Statement","data","Table","Object","keys","map","key","i","item","PieChart","plotData","dataToPlot","obj","label","filter","prevValue","newValue","indexToChange","findIndex","push","outerRadius","innerRadius","width","height","useEffect","colorScale","d3","interpolator","domain","select","remove","svg","append","attr","arcGenerator","pieGenerator","padAngle","d","arc","selectAll","enter","style","_","text","centroid","x","y","drawChart","Statistics","calcTotal","arg","total","entries","forEach","calcPercentage","totalIncome","ListContent","NewEntryOnList","addButton","description","setDescription","setValue","setDate","category","setCategory","Label","step","list","RemoveEntryOnList","removeButton","itemIndex","setItemIndex","some","List","name","balance","setBalance","showBalance","setShowBalance","newEntry","setNewEntry","removeEntry","setRemoveEntry","statementItems","setStatementItems","show","index","newState","newBalance","CurrentLists","Accordion","defaultActiveKey","Item","eventKey","replace","App","addList","setAddList","removeList","setRemoveList","myLists","setMyLists","variant","newListName","removeListName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8fde238.chunk.js","sourcesContent":["import './assets/css/AddListButton.css';\nimport { useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction AddListButton({ createNewList, lists, ...props }) {\n\n    const [listName, setListName] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorLog, setErrorLog] = useState(\"teste\");\n\n    const cannotCreate = () => {\n\n        setError(true);\n\n        if (listName === \"\") {\n            setErrorLog(\"Enter list name\");\n        } else {\n            setErrorLog(\"List already exists\");\n        };\n    };\n\n    return (\n        <div id=\"new-list-button\">\n            <Modal {...props} size=\"sm\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Add List\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"text-start\" controlId=\"exampleForm.ControlInput1\">\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter New List Name\"\n                            value={listName}\n                            onChange={e => setListName(e.target.value)}\n                            required\n                        />\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    {error && \n                        <p className=\"text-danger\">{errorLog}</p>\n                    }\n                    <Button onClick={\n                        (listName!==\"\" && lists.indexOf(listName) === -1)\n                        ? () => {\n                            props.onHide();\n                            createNewList(listName);\n                            setError(false);\n                            setListName(\"\");\n                        }\n                        : () => cannotCreate()\n                    }>Create\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AddListButton;","import './assets/css/RemoveListButton.css';\nimport { useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction RemoveListButton({ removeCurrentList, lists, ...props }) {\n\n    const [listName, setListName] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorLog, setErrorLog] = useState(\"teste\");\n\n    const cannotRemove = () => {\n\n        setError(true);\n\n        if (listName === \"\") {\n            setErrorLog(\"Enter list name\");\n        } else {\n            setErrorLog(\"List doesn't exist\");\n        };\n    };\n\n    if (lists.length === 0) {\n        return (\n            <div id=\"remove-list-button\">\n                <Modal {...props} size=\"sm\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">Remove List</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body className=\"text-danger\">You don't have any lists yet!</Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={props.onHide}>OK</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    } else {\n        return (\n            <div id=\"remove-list-button\">\n                <Modal {...props} size=\"sm\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">Remove List</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group className=\"text-start\" controlId=\"exampleForm.ControlInput1\">\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Enter List to Remove\"\n                                value={listName}\n                                onChange={e => setListName(e.target.value)}\n                                required\n                            />\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        {error && \n                            <p className=\"text-danger\">{errorLog}</p>\n                        }\n                        <Button onClick={\n                            (listName!==\"\" && lists.indexOf(listName) !== -1)\n                            ? () => {\n                                props.onHide();\n                                removeCurrentList(listName);\n                                setError(false);\n                                setListName(\"\");\n                            }\n                            : () => cannotRemove()\n                        }>Remove\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    };\n};\n\nexport default RemoveListButton;","export const monthsObj = {\n    \"01\": \"Jan\", \"02\": \"Feb\", \"03\": \"Mar\", \"04\": \"Apr\", \"05\": \"May\", \"06\": \"Jun\",\n    \"07\": \"Jul\", \"08\": \"Aug\", \"09\": \"Sep\", \"10\": \"Oct\", \"11\": \"Nov\", \"12\": \"Dec\"\n};\n\nexport const formatMoney = (value) => {\n\n    if (/^[-]/.test(value)) {\n        return parseFloat(value.substring(1)).toFixed(2);\n    } else {\n        return parseFloat(value).toFixed(2);\n    };\n};\n\nexport const formatDate = (date) => {\n\n    if (date === \"\") {\n        return \"\";\n    } else {\n        let dateArray = date.split(\"-\");\n        let year = dateArray[0];\n        let month = dateArray[1];\n        let day = dateArray[2];\n        return monthsObj[month] + \" \" + day + \", \" + year;\n    };\n};","import './assets/css/Statement.css';\nimport Table from \"react-bootstrap/Table\";\n\nfunction Statement({ data }) {\n\n    return (\n        <div id=\"statement-wrapper\">\n            <p id=\"table-title\">Statement</p>\n            <Table id=\"table-content\">\n                <tbody>\n                    <tr>\n                        {Object.keys(data[0]).map((key, i) => {\n                            if (key !== \"Type\") {\n                                return (\n                                    <th key={i}>\n                                        {key}\n                                    </th>\n                                );\n                            } else {\n                                return null;\n                            };\n                        })}\n                    </tr>\n                    {data.map((item, i) => (\n                        <tr key={i} className={item[\"Type\"]}>\n                            <td>{item[\"#\"]}</td>\n                            <td>{item[\"Description\"]}</td>\n                            <td>{item[\"Value\"]}</td>\n                            <td>{item[\"Date\"]}</td>\n                            <td>{item[\"Category\"]}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n        </div>\n    );\n};\n\nexport default Statement;","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nfunction PieChart({ plotData, type, id, ...props }) {\n\n    let dataToPlot = [];\n\n    for (let i = 0; i < plotData.length; i++) {\n\n        if (plotData[i][\"Type\"] === type) {\n\n            let obj = { label: plotData[i][\"Category\"], value: plotData[i][\"Value\"] }\n\n            if (dataToPlot.filter(item => item.label === plotData[i][\"Category\"]).length > 0) {\n                let prevValue = dataToPlot.filter(item => item.label === plotData[i][\"Category\"])[0].value;\n                let newValue = plotData[i][\"Value\"];\n                let indexToChange = dataToPlot.findIndex(item => item.label === plotData[i][\"Category\"]);\n                dataToPlot[indexToChange].value = (parseFloat(prevValue) + parseFloat(newValue)).toFixed(2);\n            } else {\n                dataToPlot.push(obj);\n            };\n        };\n    };\n    \n    const { \n        data = dataToPlot, \n        outerRadius = 120, \n        innerRadius = 0\n    } = props;\n    \n    const margin = { top: 10, right: 40, bottom: 10, left: 40 }; \n    const width = 2 * outerRadius + margin.left + margin.right;\n    const height = 2 * outerRadius + margin.top + margin.bottom;\n\n    useEffect(() => {\n        drawChart();\n    });\n\n    function drawChart() {\n\n        // Draw the chart \n        const colorScale = d3\n            .scaleSequential()\n            .interpolator(d3.interpolateCool)\n            .domain([0, data.length])\n        ;\n\n        // Remove the old svg\n        d3.select('#' + id + '-graphic')\n            .select('svg')\n            .remove()\n        ;\n\n        // Create new svg\n        const svg = d3\n            .select('#' + id + '-graphic')\n            .append('svg')\n            .attr('width', width)\n            .attr('height', height)\n            .attr(\"class\", \"svg-style\")\n            .append('g')\n            .attr('transform', `translate(${width / 2}, ${height / 2})`)\n        ;\n        const arcGenerator = d3\n            .arc()\n            .innerRadius(innerRadius)\n            .outerRadius(outerRadius)\n        ;\n        const pieGenerator = d3\n            .pie()\n            .padAngle(0)\n            .value((d) => d.value)\n        ;\n        const arc = svg\n            .selectAll()\n            .data(pieGenerator(data))\n            .enter()\n        ;\n\n        // Append sectors\n        arc\n            .append('path')\n            .attr('d', arcGenerator)\n            .style('fill', (_, i) => colorScale(i))\n            .style('stroke', '#ffffff')\n            .style('stroke-width', 0)\n        ;\n\n        // Append text labels\n        arc\n            .append('text')\n            .attr('text-anchor', 'middle')\n            .attr('alignment-baseline', 'middle')\n            .text(d => d.data.label)\n            .style('fill', '#ffffff')\n            .attr('transform', (d) => {\n                const [x, y] = arcGenerator.centroid(d);\n                return `translate(${x}, ${y})`;\n            })\n        ;\n    };\n\n    return <div id={id + '-graphic'}/>;\n};\n\nexport default PieChart;","import './assets/css/Statistics.css';\nimport PieChart from './PieChart.js';\n\nfunction Statistics({ data, listName }) {\n\n    const calcTotal = (arg) => {\n\n        let total = 0;\n        let entries = [];\n\n        if (arg === \"income\") {\n            entries = data.filter(item => item[\"Type\"] === \"income\");\n        } else if (arg === \"expense\") {\n            entries = data.filter(item => item[\"Type\"] === \"expense\");\n        };\n\n        entries.forEach(item => total += parseFloat(item[\"Value\"]));\n        return total.toFixed(2);\n    };\n\n    const calcPercentage = () => {\n\n        let totalIncome = parseFloat(calcTotal(\"income\"));\n        let totalExpenses = parseFloat(calcTotal(\"expense\"));\n        let result = (totalExpenses*100/totalIncome);\n\n        return result.toFixed(0);\n    };\n\n    return (\n        <div id=\"statistics-wrapper\">\n            <h4 id=\"stats-title\">Statistics</h4>\n            <p>The total income is $ {calcTotal(\"income\")} and the total expenses are $ {calcTotal(\"expense\")}.</p>\n            {calcPercentage() !== \"Infinity\" &&\n                <p>Expenses represent {calcPercentage()}% of the income.</p>\n            }\n            <div id=\"chart-box\" className=\"d-flex justify-content-between\">\n                <div>\n                    <p>Income distribution</p>\n                    <PieChart\n                        plotData={data}\n                        type=\"income\"\n                        id={listName + \"-income\"}\n                    />\n                </div>\n                <div>\n                    <p>Expenses distribution</p>\n                    <PieChart\n                        plotData={data}\n                        type=\"expense\"\n                        id={listName + \"-expense\"}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Statistics;","import Statement from './Statement.js'\nimport Statistics from './Statistics.js'\n\nfunction ListContent({ data, listName }) {\n\n    return (\n        <div>\n            <div id=\"statement-container\" className=\"d-flex flex-column\">\n                <Statement data={data}/>\n            </div>\n            <div id=\"statistics-container\" className=\"d-flex flex-column\">\n                <Statistics\n                    data={data}\n                    listName={listName}\n                />\n            </div>\n\n        </div>\n    );\n};\n\nexport default ListContent;","import './assets/css/NewEntryOnList.css';\nimport { useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\n\nfunction NewEntryOnList({ addButton, type, ...props }) {\n\n    const [description, setDescription] = useState(\"\");\n    const [value, setValue] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorLog, setErrorLog] = useState(\"teste\");\n\n    const incomeDatalist = [\"Salary\", \"Investments\", \"Property\", \"Extra\", \"Present\", \"Other\"];\n    const expenseDatalist = [\"Housing\", \"Food\", \"Health\", \"Transportation\", \"Education\", \"Clothing\", \"Leisure\", \"Other\"];\n\n    const cannotCreate = () => {\n\n        setError(true);\n\n        if (description === \"\") {\n            setErrorLog(\"Enter \" + type + \" description\");\n        } else {\n            setErrorLog(\"Enter \" + type + \" value\");\n        };\n    };\n\n    return (\n        <div id=\"new-entry-buttons\">\n            <Modal {...props} size=\"md\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        New {type}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                className=\"form-input\"\n                                type=\"text\"\n                                placeholder=\"Enter description\"\n                                value={description}\n                                onChange={e => setDescription(e.target.value)}\n                                required\n                            />\n                        </Form.Group>\n                        <div id=\"value-date-box\" className=\"d-flex\">\n                            <Form.Group id=\"value-input\" className=\"text-start\" controlId=\"exampleForm.ControlTextarea1\">\n                                <Form.Label>Value</Form.Label>\n                                <Form.Control\n                                    className=\"form-input\"\n                                    placeholder=\"Enter value\"\n                                    type=\"number\"\n                                    step=\"0.01\"\n                                    value={value}\n                                    onChange={e => setValue(e.target.value)}\n                                    required\n                                />\n                            </Form.Group>\n                            <Form.Group id=\"date-input\" className=\"text-start\" controlId=\"exampleForm.ControlTextarea1\">\n                                <Form.Label>Date</Form.Label>\n                                <Form.Control\n                                    className=\"form-input\"\n                                    type=\"date\"\n                                    value={date}\n                                    onChange={e => setDate(e.target.value)}\n                                />\n                            </Form.Group>\n                        </div>\n                        <Form.Group className=\"text-start\" controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control\n                                className=\"form-input\"\n                                placeholder=\"Enter category\"\n                                type=\"text\"\n                                value={category}\n                                onChange={e => setCategory(e.target.value)}\n                                list=\"categories\"\n                            />\n                            <datalist id=\"categories\">\n                                {type === \"income\"\n                                ? incomeDatalist.map(item => <option key={item}>{item}</option>)\n                                : expenseDatalist.map(item => <option key={item}>{item}</option>)}\n                            </datalist>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    {error && \n                        <p className=\"text-danger\">{errorLog}</p>\n                    }\n                    <Button onClick={\n                        (description!== \"\" && value!== \"\")\n                        ? () => {\n                            props.onHide();\n                            addButton(description, value, date, category, type)\n                            setError(false);\n                        }\n                        : () => cannotCreate()\n                    }>Add {type}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default NewEntryOnList;","import './assets/css/RemoveEntryOnList.css';\nimport { useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction RemoveEntryOnList({ removeButton, data, ...props }) {\n\n    const [itemIndex, setItemIndex] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [errorLog, setErrorLog] = useState(\"teste\");\n\n    const cannotCreate = () => {\n\n        setError(true);\n\n        if (itemIndex === \"\") {\n            setErrorLog(\"Enter item index\");\n        } else {\n            setErrorLog(\"Item doesn't exist\");\n        };\n    };\n\n    if (data.length === 0) {\n        return (\n            <div id=\"remove-list-button\">\n                <Modal {...props} size=\"sm\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">Remove item</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body className=\"text-danger\">You don't have any items yet</Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={props.onHide}>OK</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    } else {\n        return (\n            <div id=\"new-list-button\">\n                <Modal {...props} size=\"sm\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Remove item\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group className=\"text-start\" controlId=\"exampleForm.ControlInput1\">\n                            <Form.Control\n                                type=\"number\"\n                                step=\"1\"\n                                placeholder=\"Enter Index To Remove\"\n                                value={itemIndex}\n                                onChange={e => setItemIndex(e.target.value)}\n                            />\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        {error && \n                            <p className=\"text-danger\">{errorLog}</p>\n                        }\n                        <Button onClick={\n                            (itemIndex!==\"\" && data.some(item => item[\"#\"] === itemIndex))\n                            ? () => {\n                                props.onHide();\n                                removeButton(itemIndex);\n                                setError(false);\n                                setItemIndex(\"\");\n                            }\n                            : () => cannotCreate()\n                        }>Remove\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n};\n\nexport default RemoveEntryOnList;","import './assets/css/List.css';\nimport { useState } from 'react';\nimport { formatMoney, formatDate } from './globalDeclarations.js'\nimport ListContent from './ListContent.js'\nimport NewEntryOnList from './NewEntryOnList.js'\nimport RemoveEntryOnList from './RemoveEntryOnList.js'\nimport { BiDollarCircle } from 'react-icons/bi';\nimport { MdAddCircleOutline, MdRemoveCircleOutline } from 'react-icons/md'\nimport { RiCloseCircleLine } from 'react-icons/ri';\n\nfunction List({ name }) {\n\n    const [balance, setBalance] = useState(0);\n    const [showBalance, setShowBalance] = useState(true);\n    const [newEntry, setNewEntry] = useState(false);\n    const [removeEntry, setRemoveEntry] = useState(false);\n    const [statementItems, setStatementItems] = useState([]);\n\n    const submitItem = (description, value, date, category, type) => {\n\n        setNewEntry(false);\n        setStatementItems([...statementItems, {\"#\": (statementItems.length + 1).toFixed(0), \"Description\": description, \"Value\": formatMoney(value), \"Date\": formatDate(date), \"Category\": category, \"Type\": type}]);\n\n        if (type === \"income\") {\n            setBalance(balance + parseFloat(formatMoney(value)));\n        };\n        if (type === \"expense\") {\n            setBalance(balance - parseFloat(formatMoney(value)));\n        };\n    };\n\n    const removeItem = (index) => {\n\n        setRemoveEntry(false);\n\n        let currentState = statementItems;\n        let newState = currentState.filter(item => item[\"#\"] !== index);\n        newState.map((item, i) => item[\"#\"] = (i + 1).toFixed(0));\n\n        setStatementItems(newState);\n\n        let newBalance = 0;\n        newState.forEach(item => {\n            if (item[\"Type\"] === \"income\") {\n                newBalance += parseFloat(item[\"Value\"]);\n            } else if (item[\"Type\"] === \"expense\") {\n                newBalance -= parseFloat(item[\"Value\"]);\n            };\n        });\n\n        setBalance(newBalance);\n    };\n\n    return (\n        <div>\n            <div id=\"display-container\" className=\"d-flex justify-content-between\">\n                <div id=\"display-balance\" className=\"d-flex\">\n                    <p>Balance: </p>\n                    <BiDollarCircle className=\"display-icon\" onClick={() => setShowBalance(!showBalance)}/>\n                    {showBalance && <h2>{balance.toFixed(2)}</h2>}\n                </div>\n                <div id=\"display-buttons\" className=\"d-flex\">\n                    <div className=\"d-flex\">\n                        <p>New: </p>\n                        <MdAddCircleOutline className=\"display-icon\" onClick={() => setNewEntry(\"income\")}/>\n                        <MdRemoveCircleOutline className=\"display-icon\" onClick={() => setNewEntry(\"expense\")}/>\n                    </div>\n                    <div className=\"d-flex\">\n                        <p>Remove: </p>\n                        <RiCloseCircleLine className=\"display-icon\" onClick={() => setRemoveEntry(true)}/>\n                    </div>\n                </div>\n            </div>\n            <div id=\"list-content\">\n                {statementItems.length > 0 &&\n                    <ListContent\n                        data={statementItems}\n                        listName={name}\n                    />\n                }\n            </div>\n            <div>\n                <NewEntryOnList\n                    show={newEntry}\n                    onHide={() => setNewEntry(false)}\n                    addButton={submitItem}\n                    type={newEntry}\n                />\n                <RemoveEntryOnList\n                    show={removeEntry}\n                    onHide={() => setRemoveEntry(false)}\n                    removeButton={removeItem}\n                    data={statementItems}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default List;","import './assets/css/CurrentLists.css';\nimport List from './List.js'\nimport Accordion from 'react-bootstrap/Accordion'\n\nfunction CurrentLists({ data }) {\n\n    return (\n        <div>\n            {data.map((item) => (\n                <Accordion defaultActiveKey=\"0\" key={item}>\n                    <Accordion.Item eventKey=\"0\">\n                        <Accordion.Header>{item}</Accordion.Header>\n                        <Accordion.Body>\n                            <List name={item.replace(/\\s/g, \"-\")}/>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n            ))}\n        </div>\n    );\n};\n\nexport default CurrentLists;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/css/App.css';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport AddListButton from './AddListButton.js'\nimport RemoveListButton from './RemoveListButton.js'\nimport CurrentLists from './CurrentLists.js'\n\nfunction App() {\n\n    const [addList, setAddList] = useState(false);\n    const [removeList, setRemoveList] = useState(false);\n    const [myLists, setMyLists] = useState([]);\n\n    const createNewList = (newListName) => {\n        setMyLists([...myLists, newListName]);\n    };\n\n    const removeCurrentList = (removeListName) => {\n        setMyLists(myLists.filter(item => item !== removeListName));\n    };\n\n    return (\n        <div id=\"background\">\n            <div id=\"main-container\" className=\"container-fluid\">\n                <div id=\"nav-container\" className=\"d-flex justify-content-between\">\n                    <div id=\"nav-title\" className=\"d-flex\">\n                        <h1>Wallet App</h1>\n                    </div>\n                    <div id=\"nav-buttons\" className=\"d-flex\">\n                        <Button variant=\"primary\" type=\"button\" className=\"nav-button\" onClick={() => setAddList(true)}>\n                            Add List\n                        </Button>\n                        <Button variant=\"primary\" type=\"button\" className=\"nav-button\" onClick={() => setRemoveList(true)}>\n                            Remove List\n                        </Button>\n                    </div>\n                </div>\n                <div id=\"nav-windows\">\n                    <AddListButton\n                        show={addList}\n                        onHide={() => setAddList(false)}\n                        createNewList={createNewList}\n                        lists={myLists}\n                    />\n                    <RemoveListButton\n                        show={removeList}\n                        onHide={() => setRemoveList(false)}\n                        removeCurrentList={removeCurrentList}\n                        lists={myLists}\n                    />\n                </div>\n                <div id=\"lists-container\">\n                    {myLists.length > 0 &&\n                        <CurrentLists\n                            data={myLists}\n                        />\n                    }\n                </div>\n            </div>\n            <div id=\"footer-container\" className=\"d-flex align-items-center justify-content-center\">\n                <p>&#169; 2021 Wallet App | A project by Victor</p>\n            </div>\n        </div>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}